{"keys":[{"path":["title"],"id":"title","weight":1,"src":"title","getFn":null},{"path":["body"],"id":"body","weight":1,"src":"body","getFn":null}],"records":[{"i":0,"$":{"0":{"v":"This page has not yet sprouted","n":0.408},"1":{"v":"[Dendron](https://dendron.so/) (the tool used to generate this site) lets authors selective publish content. You will see this page whenever you click on a link to an unpublished page\n\n![](https://foundation-prod-assetspublic53c57cce-8cpvgjldwysl.s3-us-west-2.amazonaws.com/assets/images/not-sprouted.png)","n":0.189}}},{"i":1,"$":{"0":{"v":"Root","n":1},"1":{"v":"# Awesome Knowledge\n\nThis contains various knowledge on different topics.\n","n":0.333}}},{"i":2,"$":{"0":{"v":"Math","n":1}}},{"i":3,"$":{"0":{"v":"Geometry","n":1}}},{"i":4,"$":{"0":{"v":"Convert Angle to Vector2","n":0.5},"1":{"v":"\n## Convert an angle to a Vector2\n\nIf you have the angle you want to convert, you can use the cosinus and the sinus to obtain the angle's coordinates:\n\nx = cosinus(angle)\ny = sinus(angle)\n\nIn mathematics, the cosinus would be the length of the bottom edge, and the sinus would provide the length of the opposite edge.\n\nIn graphics, it become the coordinate of the vector.\n\n### Javascript\n\n```javascript\n\nlet angle = 90;\nlet vector = new Vector2();\nvector.x = Math.cos(angle);\nvector.y = Math.sin(angle);\n\n```\n\nUsing the [Math built-in object](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math)\n\n## Convert this Vector2 to a position\n\nYou can obtain a coordinate by multiplying the Vector2 by a length.\n\n```javascript\nvar coordinate = vector * 5\n```\n\n## Convert the Vector2 direction to an angle\n\nYou can use atan2(y, x) to obtain the angle back.\n\n### Javascript\n\n```javascript\n\nlet angle = Math.atan2(vector.y, vector.x);\n\n```\n","n":0.091}}},{"i":5,"$":{"0":{"v":"Computing","n":1}}},{"i":6,"$":{"0":{"v":"Web","n":1}}},{"i":7,"$":{"0":{"v":"TypeScript","n":1},"1":{"v":"\n# Typescript\n\nThis is a relatively typed language used for frontend and backend projects.\n","n":0.277}}},{"i":8,"$":{"0":{"v":"Scaffolding","n":1},"1":{"v":"\n# Scaffolding\n\nIn computing, scaffolding is the generation of a folder (usually containing code) setup for a language or framework.\n\n## Tools\n\n### Yeoman\n\nVery used scaffolding tool.\n\nUrl: https://yeoman.io/\n\n#### Creating a generator\n\nGenerator: https://github.com/yeoman/generator-generator\n- Contains a generator to create a generator\n\n#### Typescript generator\n\nGenerator: https://github.com/gliviu/generator-typescript-template\n- Typescript generator to create a generator\n\nAn example: https://github.com/pnp/generator-teams\n\n","n":0.146}}},{"i":9,"$":{"0":{"v":"Hot Reload","n":0.707},"1":{"v":"\n# Hot reload\n\nHot reload consist at reloading without rebuilding a code resource, usually code.\n\n## Tools\n\n### live-server\n\nIt can reload JS, HTML and CSS.\n\nUrl: https://github.com/tapio/live-server\n\nReview: not tested\n\n### nodemon\n\nRestart a NodeJS application when files are changed.\n\nIt watches a directory.\n\nUrl: https://www.npmjs.com/package/nodemon\n\nReview: not tested\n\n### node-dev\n\nRestart a NodeJS application when files are changed.\n\nIt watches the require calls, it do not restart if an unused file is changed.\n\nUrm: https://github.com/fgnass/node-dev\n\nReview: not tested\n\n### ts-node-dev\n\nOptimization of node-dev\n\nIt uses [ts-node](https://github.com/TypeStrong/ts-node), a JIT typescript.\n\nIt do not recompile everything when a used script file is changed.\n\nUrl: https://github.com/wclr/ts-node-dev\n\nReview: not tested\n\n### tsc\n\nThis is the official Typescript command.\n\nTo do a watch, the command is \"tsc --watch\".\n\n### webpack\n\nYou can use:\n- the command \"webpack --watch\"\n- webpack-dev-server\n\nThere is a typescript plugin as well.\n","n":0.094}}},{"i":10,"$":{"0":{"v":"Bundler","n":1},"1":{"v":"# Bundler\n\nBundling is the action of packaging the code and assets of an application.\n\n## Tools\n\n### webpack\n\nVery used bundling tool.\n\nReview: very complicated\n\n### parcel\n\nVery used bundling tool.\n\nIt is supposed to be easy to use.\n\nIt is supposed to not require a configuration.\n\nIt works with Typescript natively, relatively well.\n\nUrl: https://parceljs.org/\n\nReview: not as easy to use as declared\n\n### Bugs encountered\n\nNot all of them are Parcel responsability, some were caused by Typescript.\n\nThey are not exhaustive, I've also encountered a bug where I had to put \"--no-scope-hoist\" to the command, for instance.\n\n#### When building a library\n\nI've encountered the error:\n\n```\nError: Failed to install @parcel/transformer-typescript-tsc: process.chdir() is not supported in workers\n```\n\nWhen building a library, to fix it, I've run:\n\n> npm i --save-dev  @parcel/transformer-typescript-tsc\n\n#### Export issue\n\nI've encountered the error: \n\n```\n@parcel/core: my-path/my-class.ts does not export 'MyClass'\n```\n\nIt was an interface, I've exported it as a type :\n\n```\nexport type { MyInterface } from 'my-path/MyInterface.ts\n```\n\nI think it was inside an index.ts file.\n\n#### Import issue\n\n```\nUncaught TypeError: (0 , _myLib.MyClass) is not a constructor\n```\n\nI am not sure what I've done to fix this one.\n\n#### dependency reload\n\nBe aware that it will not reload the cache if the dependency is a link.\n\nSee this [issue](https://github.com/parcel-bundler/parcel/issues/4332).\n\nI've added the argument '--no-cache':\n- It still require to reload the page\n- I think it need to restart the watch also \n\n#### Targetting web app + library\n\nIt did not work very well, on a Typescript project.\n\nYou are not allowed to specify a main, module or types.\n\nI did some work and solved some issues.\n\nI was left with this error:\n\n```\n@parcel/packager-js: External modules are not supported when building for browser\n```\n\nAdding this solved the build issue:\n\n```json\n\"engines\": {\n  \"node\": \">= 16\"\n},\n```\n\nNo types were exported though, and it was not importable.\n\nI stopped looking how to fix there, and made another project, and a common library.\n\n#### tsc interop\n\nI've encoutered this error:\n\n```\nTypeError: Class constructor Command cannot be invoked without 'new'\n```\n\nI was working on a parcel project with tsc enabled.\n\nI tried to setup esModuleInterop in tsconfig.json, without results.\n\nThis did not work either, setting \"target\": \"ES6\" in tsconfig.json.\n\nRemoving https://parceljs.org/languages/typescript/#tsc solved the issue.\n\n### rollup.js\n\nUrl: https://rollupjs.org/\n\nReview: not tested\n\n### brunch.io\n\nUrl: https://brunch.io/\n\nReview: not tested\n\n### gulpjs\n\nI'ved used it, I can't recall wether it was good or not.\n\nUrl: https://gulpjs.com/\n\nReview: same as not tested\n","n":0.053}}},{"i":11,"$":{"0":{"v":"Game","n":1}}},{"i":12,"$":{"0":{"v":"Procedural Texture","n":0.707},"1":{"v":"# Procedural texture\n\nNot procedural texturing, it is about procedural generation of texture.\n\n## Unity\n\nFree assets:\n- https://assetstore.unity.com/packages/tools/utilities/protex-147852\n- https://assetstore.unity.com/packages/tools/visual-scripting/derive-procedural-pbr-editor-beta-201358\n\nPaid assets:\n- https://assetstore.unity.com/packages/tools/painting/seamless-procedural-texture-builder-219833 (owned)\n\n","n":0.229}}}]}
